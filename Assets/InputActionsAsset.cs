//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.1
//     from Assets/InputActionsAsset.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActionsAsset : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActionsAsset()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActionsAsset"",
    ""maps"": [
        {
            ""name"": ""MainMap"",
            ""id"": ""a288b866-6196-4493-ab9f-d49873d24c69"",
            ""actions"": [
                {
                    ""name"": ""PlayerOneMovement"",
                    ""type"": ""Value"",
                    ""id"": ""5f8d3e39-bae9-4fa3-915e-5a00a29f53a9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PlayerTwoMovement"",
                    ""type"": ""Value"",
                    ""id"": ""97e71284-92cf-415e-b1da-b8e96a8fec46"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""ec1b1c62-144c-4dc9-bd75-db2e42d6252a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""36f70bb6-f6ce-44b5-8835-95154b91dc2f"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerOneMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b9f502ba-feca-4a90-9294-6b504a573884"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerOneMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""efb7707e-de91-4915-b889-8dab9eac39ad"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerOneMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0b4a6473-248a-46c9-ab7a-0d68264da863"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerOneMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d559aac5-b479-4d46-adbc-9b51b05f2718"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerOneMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""990eb112-6f60-433f-b556-a7a12f6c32a2"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerTwoMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""166f1ae0-cb47-4cf1-8c58-da61a5595780"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerTwoMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f35c8b6f-068f-450e-a3d2-425155145e45"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerTwoMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c5875d90-d980-4ff8-9e1d-e17dade05e80"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerTwoMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7e0ed611-6ee1-4420-afdd-54a98396b744"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerTwoMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""aa4f848a-d9cd-4d77-981e-c8fdf2e6a86e"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""SecondMap"",
            ""id"": ""5424b128-45c8-4e45-9910-f678cc1eafc3"",
            ""actions"": [
                {
                    ""name"": ""PlayerOneMovement"",
                    ""type"": ""Value"",
                    ""id"": ""b23a1b74-15ba-45ac-a0f7-d6eb92180784"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""IJKL"",
                    ""id"": ""66e34aff-6a1d-4ec9-8f50-a70968077941"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerOneMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9c3e8af0-c765-4c7c-9862-59b027b46b17"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerOneMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b405d63c-38ed-41d6-9f07-cadea16e88c8"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerOneMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a0f321c6-9944-48d2-834c-0a951b9580fd"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerOneMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ae695f22-5db2-445d-9b50-9173ca339054"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerOneMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // MainMap
        m_MainMap = asset.FindActionMap("MainMap", throwIfNotFound: true);
        m_MainMap_PlayerOneMovement = m_MainMap.FindAction("PlayerOneMovement", throwIfNotFound: true);
        m_MainMap_PlayerTwoMovement = m_MainMap.FindAction("PlayerTwoMovement", throwIfNotFound: true);
        m_MainMap_Pause = m_MainMap.FindAction("Pause", throwIfNotFound: true);
        // SecondMap
        m_SecondMap = asset.FindActionMap("SecondMap", throwIfNotFound: true);
        m_SecondMap_PlayerOneMovement = m_SecondMap.FindAction("PlayerOneMovement", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // MainMap
    private readonly InputActionMap m_MainMap;
    private IMainMapActions m_MainMapActionsCallbackInterface;
    private readonly InputAction m_MainMap_PlayerOneMovement;
    private readonly InputAction m_MainMap_PlayerTwoMovement;
    private readonly InputAction m_MainMap_Pause;
    public struct MainMapActions
    {
        private @InputActionsAsset m_Wrapper;
        public MainMapActions(@InputActionsAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @PlayerOneMovement => m_Wrapper.m_MainMap_PlayerOneMovement;
        public InputAction @PlayerTwoMovement => m_Wrapper.m_MainMap_PlayerTwoMovement;
        public InputAction @Pause => m_Wrapper.m_MainMap_Pause;
        public InputActionMap Get() { return m_Wrapper.m_MainMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainMapActions set) { return set.Get(); }
        public void SetCallbacks(IMainMapActions instance)
        {
            if (m_Wrapper.m_MainMapActionsCallbackInterface != null)
            {
                @PlayerOneMovement.started -= m_Wrapper.m_MainMapActionsCallbackInterface.OnPlayerOneMovement;
                @PlayerOneMovement.performed -= m_Wrapper.m_MainMapActionsCallbackInterface.OnPlayerOneMovement;
                @PlayerOneMovement.canceled -= m_Wrapper.m_MainMapActionsCallbackInterface.OnPlayerOneMovement;
                @PlayerTwoMovement.started -= m_Wrapper.m_MainMapActionsCallbackInterface.OnPlayerTwoMovement;
                @PlayerTwoMovement.performed -= m_Wrapper.m_MainMapActionsCallbackInterface.OnPlayerTwoMovement;
                @PlayerTwoMovement.canceled -= m_Wrapper.m_MainMapActionsCallbackInterface.OnPlayerTwoMovement;
                @Pause.started -= m_Wrapper.m_MainMapActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_MainMapActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_MainMapActionsCallbackInterface.OnPause;
            }
            m_Wrapper.m_MainMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PlayerOneMovement.started += instance.OnPlayerOneMovement;
                @PlayerOneMovement.performed += instance.OnPlayerOneMovement;
                @PlayerOneMovement.canceled += instance.OnPlayerOneMovement;
                @PlayerTwoMovement.started += instance.OnPlayerTwoMovement;
                @PlayerTwoMovement.performed += instance.OnPlayerTwoMovement;
                @PlayerTwoMovement.canceled += instance.OnPlayerTwoMovement;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
            }
        }
    }
    public MainMapActions @MainMap => new MainMapActions(this);

    // SecondMap
    private readonly InputActionMap m_SecondMap;
    private ISecondMapActions m_SecondMapActionsCallbackInterface;
    private readonly InputAction m_SecondMap_PlayerOneMovement;
    public struct SecondMapActions
    {
        private @InputActionsAsset m_Wrapper;
        public SecondMapActions(@InputActionsAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @PlayerOneMovement => m_Wrapper.m_SecondMap_PlayerOneMovement;
        public InputActionMap Get() { return m_Wrapper.m_SecondMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SecondMapActions set) { return set.Get(); }
        public void SetCallbacks(ISecondMapActions instance)
        {
            if (m_Wrapper.m_SecondMapActionsCallbackInterface != null)
            {
                @PlayerOneMovement.started -= m_Wrapper.m_SecondMapActionsCallbackInterface.OnPlayerOneMovement;
                @PlayerOneMovement.performed -= m_Wrapper.m_SecondMapActionsCallbackInterface.OnPlayerOneMovement;
                @PlayerOneMovement.canceled -= m_Wrapper.m_SecondMapActionsCallbackInterface.OnPlayerOneMovement;
            }
            m_Wrapper.m_SecondMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PlayerOneMovement.started += instance.OnPlayerOneMovement;
                @PlayerOneMovement.performed += instance.OnPlayerOneMovement;
                @PlayerOneMovement.canceled += instance.OnPlayerOneMovement;
            }
        }
    }
    public SecondMapActions @SecondMap => new SecondMapActions(this);
    public interface IMainMapActions
    {
        void OnPlayerOneMovement(InputAction.CallbackContext context);
        void OnPlayerTwoMovement(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
    public interface ISecondMapActions
    {
        void OnPlayerOneMovement(InputAction.CallbackContext context);
    }
}
